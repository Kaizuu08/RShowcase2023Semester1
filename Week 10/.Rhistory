airq <- csv.read("airquality.csv")
airq <- read.csv("airquality.csv")
airq
head(airq)
summary(airq)
str(airq)
airq <- na.omit(airq)
str(airq)
summary(airq)
ozone <- airq$Ozone
airq[airq$Month == 5 | airq$Month == 6,]
airq[airq$Month < 6, ]
airq[airq$Month <= 6,]
airq[airq$Month < 7, ]
airq[airq$Month == 5 | airq$Month == 6,]
hist(ozone)
boxplot(ozone)
plot(ozone)
temp <- airq$Temp
plot(ozone,temp)
boxplot(ozone)
plot(ozone,temp)
hist(airq$Ozone)
plot(airq)
fit <- lm(Ozone ~ Temp, data = airq)
fit
hist(airq$Ozone)
plot(ozone,temp)
fit
fit <- lm(Temp ~ Ozone, data = airq)
fit
fit <- lm(Ozone ~ Temp, data = airq)
fit
plot(Ozone ~ Temp, data=airq)
abline(fit)
plot(Temp ~ Ozone, data= airq)
abline(fit)
plot(Ozone ~ Temp, data=airq)
abline(fit)
library rpart
library(rpart)
dtree <- rpart(ozone ~ temp, data = airq)
dtree
plot(Ozone ~ Temp, data=airq)
abline(fit)
airq[airq$Month == 5 | airq$Month == 6,]
airq[""]
airq["Ozone"]
hist(airq$Ozone)
help("airquality")
hist(airq$Ozone, main = "Ozone Levels", xlab = "Ozone Concentration", col = "yellow", border = "white")
hist(airq$Ozone, main = "Ozone Levels", xlab = "Ozone Concentration", col = "yellow", border = "black")
axis(x=1 , at = pretty(Ozone, n = 9) , labels = pretty(Ozone, n = 9))
axis(1 , at = pretty(Ozone, n = 9) , labels = pretty(Ozone, n = 9))
axis(1 , at = pretty(ozone, n = 9) , labels = pretty(ozone, n = 9))
axis(1 , at = pretty(ozone, n = 9) , labels = pretty(ozone, n = 9), xlim=c(0,100))
boxplot(ozone)
abline(min)
abline(x = 10)
abline( mean(ozone), col = "red")
abline( mean(h = airq$Ozone), col = "red")
abline( h = mean(airq$Ozone), col = "red")
boxplot(ozone)
abline( h = mean(airq$Ozone), col = "red", lty = 2)
text(x = 1, y = ozone[ozone > quantile(ozone , 0.75) + 1.5 * IQR(ozone)])
text(x = 1, y = ozone[ozone > quantile(ozone , 0.75) + 1.5 * IQR(ozone)] , labels = ozone[ozone > quantile(ozone , 0.75) + 1.5 * IQR(ozone)], pos = 2)
text(x = 1, y = ozone[ozone < quantile(ozone , 0.75) + 1.5 * IQR(ozone)] , labels = ozone[ozone < quantile(ozone , 0.75) + 1.5 * IQR(ozone)], pos = 2)
plot(ozone)
plot(airq)
plot(ozone,temp)
fit <- lm(ozone ~ temp, data = airq)
abline(fit)
fit <- lm(temp ~ ozone, data = airq)
abline(fit)
plot(ozone,temp)
library(ggplot2)
library(ggplot2)
ggplot(data = airq, aes( x=temp, y= ozone)) + geom_point()
abline(fit)
ggplot(data = airq, aes( x=temp, y= ozone)) + geom_line()
ggplot(data = airq, aes( x=temp, y= ozone)) + geom_point()
ggplot(data = airq, aes( x=temp, y= ozone)) + geom_point(col = "red")
ggplot(data = airq, aes( x=temp, y= ozone)) + geom_point(col = "red", shape = 2)
p <- ggplot(data = airq, aes( x=temp, y= ozone)) + geom_point(col = "red", shape = 2)
p + ggtitle("temp vs ozone ") + xlab("bruh")
p + ggtitle("temp vs ozone ") + xlab("bruh") + ylab("thugger")
p + ggtitle("thug season") + xlab("amount thugged") + ylab("extremity of thugging")
plot(airq)
plot(airq$Ozone, airq$Temp)
abline(fit)
abline(fit, col = "red")
abline(fit, col = "red", break 2)
abline(fit, col = "red")
dtree <- rpart(ozone ~ temp, data = airq)
predict(fit, data.frame(airq$Temp = 90))
predict(fit, data.frame(Temp = 90))
predict(fit, data.frame(Temp = 80))
rock[rock$area >'4990' & rock$area<'6000',]
hist(mtcars$mpg, main="Frequency of mpg", xlab="mpg", ylab="Frequency")
x <- data.frame(a=c(7,3,1,3,5,6,7,8,9), b=c(100,150,300,500,250,900,12,23,45))
set.seed(1)
x<-scale(x)
fit <- kmeans(x, centers = 5, nstart = 10)
fit$size
rock_area <- data.frame(rock$area, rock$perm)
set.seed(1)
rock_scale <- scale(rock_area)
fit <- kmeans(rock_scale, 5, nstart=10)
fit
fit$tot.withinss
iris
plot(iris$Species)
barplot(table(iris$Species),
main = "Distribution of Iris Species",
xlab = "Species",
ylab = "Count")
plot(iris$Species, main = "Iris Species", xlab = "Species", ylab = "count")
boxplot(mtcars$hp ~ mtcars$cyl,
main = "Horsepower by Number of Cylinders",
xlab = "Number of Cylinders",
ylab = "Horsepower")
hist(mtcars$wt, main="Histogram of Car Weights", xlab="Weight (in 1000 lbs)", ylab="Frequency")
hist(mtcars$wt, main="Histogram of Car Weights", xlab="Weight", ylab="Frequency")
# Fit a linear model with circumference as predictor and age as response
model <- lm(age ~ circumference, data = Orange)
# Plot the data and the regression line
plot(Orange$circumference, Orange$age, xlab = "Circumference", ylab = "Age", main = "Orange Trees")
abline(model, col = "red", lwd = 2)
# Fit a linear model with circumference as predictor and age as response
model <- lm(age ~ circumference, data = Orange)
# Plot the data and the regression line
plot(Orange$circumference, Orange$age, xlab = "Circumference", ylab = "Age", main = "Orange Trees")
abline(model, col = "orange")
plot(Orange$circumference, Orange$age, xlab = "Circumference", ylab = "Age", main = "Orange Trees")
# Make a prediction for a tree with a circumference of 120mm
new_data <- data.frame(circumference = 120)
predicted_age <- predict(model, newdata = new_data)
# Add the prediction to the plot as a green line
abline(h = predicted_age, col = "green", lwd = 2)
plot(Orange$circumference, Orange$age, xlab = "Circumference", ylab = "Age", main = "Orange Trees")
abline(line, col = "orange")
predicted_age <- predict(model, newdata = 120)
# Fit a linear model to predict age by circumference
lm_model <- lm(age ~ circumference, data = Orange)
# Plot the data points and the regression line
plot(age ~ circumference, data = Orange, main = "Age vs. Circumference",
xlab = "Circumference (mm)", ylab = "Age (years)")
abline(lm_model, col = "blue", lwd = 2)
# Make a prediction for a tree with a circumference of 120mm
new_data <- data.frame(circumference = 120)
prediction <- predict(lm_model, newdata = new_data)
# Add a green line to the plot to illustrate the prediction
abline(h = prediction, col = "green", lwd = 2)
plot(age ~ circumference, data = Orange)
> abline(lm_model, col = "blue", lwd = 2)
plot(age ~ circumference, data = Orange)
abline(lm_model, col = "blue", lwd = 2)
prediction <- predict(lm_model, newdata = data.frame(circumference = 120))
abline(h = prediction, col = "green", lwd = 2)
orange_km <- kmeans(Orange[, c("age", "circumference")], centers = 3, nstart = 25)
plot(Orange$circumference, Orange$age, col = orange_km$cluster,
main = "K-Means Clustering of Orange Age and Circumference",
xlab = "Circumference", ylab = "Age")
points(orange_km$centers, col = 1:3, pch = 16, cex = 2)
# Select the age and circumference attributes
orange <- Orange[, c("age", "circumference")]
# Scale the data
orange_scaled <- scale(orange)
# Determine the optimal number of clusters using the elbow method
wss <- numeric(10)
for (i in 1:10) {
fit <- kmeans(orange_scaled, centers=i, nstart=10)
wss[i] <- sum(fit$withinss)
}
plot(1:10, wss, type="b", xlab="Number of clusters", ylab="Within cluster sum of squares")
> wss <- numeric(10)
wss <- numeric(10)
for (i in 1:10) {
+     fit <- kmeans(orange_scaled, centers=i, nstart=10)
+     wss[i] <- sum(fit$withinss)
+ }
orange <- Orange[, c("age", "circumference")]
# Scale the data
orange_scaled <- scale(orange)
# Determine the optimal number of clusters using the elbow method
wss <- numeric(10)
for (i in 1:10) {
fit <- kmeans(orange_scaled, centers=i, nstart=10)
wss[i] <- sum(fit$withinss)
}
plot(1:10, wss, type="b", xlab="Number of clusters", ylab="Within cluster sum of squares")
orange <- Orange[, c("age", "circumference")]
# Scale the data
orange_scaled <- scale(orange)
# Determine the optimal number of clusters using the elbow method
wss <- numeric(10)
for (i in 1:10) {
fit <- kmeans(orange_scaled, centers=i, nstart=10)
wss[i] <- sum(fit$withinss)
}
plot(1:10, wss)
orange <- Orange[, c("age", "circumference")]
# Scale the data
orange_scaled <- scale(orange)
# Determine the optimal number of clusters using the elbow method
wss <- numeric(10)
for (i in 1:10) {
fit <- kmeans(orange_scaled, centers=i, nstart=10)
wss[i] <- sum(fit$withinss)
}
plot(1:10, wss, type="b")
orange <- Orange[, c("age", "circumference")]
# Scale the data
orange_scaled <- scale(orange)
# Determine the optimal number of clusters using the elbow method
wss <- numeric(10)
for (i in 1:10) {
fit <- kmeans(orange_scaled, centers=i, nstart=10)
wss[i] <- sum(fit$withinss)
}
plot(1:10, wss, type="a")
orange <- Orange[, c("age", "circumference")]
# Scale the data
orange_scaled <- scale(orange)
# Determine the optimal number of clusters using the elbow method
wss <- numeric(10)
for (i in 1:10) {
fit <- kmeans(orange_scaled, centers=i, nstart=10)
wss[i] <- sum(fit$withinss)
}
plot(1:10, wss, type="c")
orange <- Orange[, c("age", "circumference")]
# Scale the data
orange_scaled <- scale(orange)
# Determine the optimal number of clusters using the elbow method
wss <- numeric(10)
for (i in 1:10) {
fit <- kmeans(orange_scaled, centers=i, nstart=10)
wss[i] <- sum(fit$withinss)
}
plot(1:10, wss, type="d")
orange <- Orange[, c("age", "circumference")]
# Scale the data
orange_scaled <- scale(orange)
# Determine the optimal number of clusters using the elbow method
wss <- numeric(10)
for (i in 1:10) {
fit <- kmeans(orange_scaled, centers=i, nstart=10)
wss[i] <- sum(fit$withinss)
}
plot(1:10, wss, type="b")
# Perform k-means clustering with 4 clusters
kmeans_model <- kmeans(orange_data_scaled, centers = 4, nstart = 10)
# Perform k-means clustering with 4 clusters
kmeans_model <- kmeans(orange_scaled, centers = 4, nstart = 10)
# Plot the results
plot(orange_data_scaled, col = kmeans_model$cluster, main = "K-means Clustering Results")
# Perform k-means clustering with 4 clusters
kmeans_model <- kmeans(orange_scaled, centers = 4, nstart = 10)
# Plot the results
plot(orange_scaled, col = kmeans_model$cluster, main = "K-means Clustering Results")
points(kmeans_model$centers, col = 1:4, pch = 8, cex = 2)
# Perform k-means clustering with 4 clusters
kmeans_model <- kmeans(orange_scaled, centers = 4, nstart = 10)
# Plot the results
plot(orange_scaled, col = kmeans_model$cluster, main = "K-means Clustering Results")
points(kmeans_model$centers, col = 1:4, pch = 8, cex = 2)
# Perform k-means clustering with 4 clusters
kmeans_model <- kmeans(orange_scaled, centers = 4, nstart = 10)
# Plot the results
plot(orange_data_scaled, col = kmeans_model$cluster, main = "K-means Clustering Results")
# Perform k-means clustering with 4 clusters
kmeans_model <- kmeans(orange_scaled, centers = 4, nstart = 10)
# Plot the results
plot(orange_data_scaled, col = kmeans_model$cluster, main = "K-means Clustering Results")
# Perform k-means clustering with 4 clusters
kmeans_model <- kmeans(orange_scaled, centers = 4, nstart = 10)
# Plot the results
plot(orange_scaled, col = kmeans_model$cluster, main = "K-means Clustering Results")
points(kmeans_model$centers, col = 1:4, pch = 8, cex = 2)
# Perform k-means clustering with 4 clusters
kmeans_model <- kmeans(orange_scaled, centers = 4, nstart = 10)
# Plot the results
plot(orange_data_scaled, col = kmeans_model$cluster, main = "K-means Clustering Results")
# Perform k-means clustering with 4 clusters
kmeans_model <- kmeans(orange_scaled, centers = 4, nstart = 10)
# Plot the results
plot(orange_data_scaled, col = kmeans_model$cluster, main = "K-means Clustering Results")
# Perform k-means clustering with 4 clusters
kmeans_model <- kmeans(orange_scaled, centers = 4, nstart = 10)
# Plot the results
plot(orange_scaled, col = kmeans_model$cluster, main = "K-means Clustering Results")
points(kmeans_model$centers, col = 1:4, pch = 8, cex = 2)
# Perform k-means clustering with 4 clusters
kmeans_model <- kmeans(orange_scaled, centers = 4, nstart = 10)
# Plot the results
plot(orange_scaled, col = kmeans_model$cluster, main = "K-means Clustering Results")
points(kmeans_model$centers, col = 1:4, pch = 8, cex = 2)
# Perform k-means clustering with 4 clusters
kmeans_model <- kmeans(orange_scaled, centers = 4, nstart = 10)
# Plot the results
plot(orange_scaled, col = kmeans_model$cluster, main = "K-means Clustering Results")
points(kmeans_model$centers, col = 1:4, pch = 8, cex = 2)
# Perform k-means clustering with 4 clusters
kmeans_model <- kmeans(orange_scaled, centers = 4, nstart = 10)
# Plot the results
plot(orange_scaled, col = kmeans_model$cluster, main = "K-means Clustering Results")
points(kmeans_model$centers, col = 1:4, pch = 8, cex = 2)
# Perform k-means clustering with 4 clusters
kmeans_model <- kmeans(orange_scaled, centers = 4, nstart = 10)
# Plot the results
plot(orange_scaled, col = kmeans_model$cluster, main = "K-means Clustering Results")
points(kmeans_model$centers, col = 1:4, pch = 8, cex = 2)
# Perform k-means clustering with 4 clusters
kmeans_model <- kmeans(orange_scaled, centers = 4, nstart = 10)
# Plot the results
plot(orange_scaled, col = kmeans_model$cluster, main = "K-means Clustering Results")
points(kmeans_model$centers, col = 1:4, pch = 8, cex = 2)
# Perform k-means clustering with 4 clusters
kmeans_model <- kmeans(orange_scaled, centers = 3, nstart = 10)
# Plot the results
plot(orange_scaled, col = kmeans_model$cluster, main = "K-means Clustering Results")
points(kmeans_model$centers, col = 1:4, pch = 8, cex = 2)
# Perform k-means clustering with 4 clusters
kmeans_model <- kmeans(orange_scaled, centers = 3, nstart = 10)
# Plot the results
plot(orange_scaled, col = kmeans_model$cluster, main = "K-means Clustering Results")
points(kmeans_model$centers, col = 1:4, pch = 8, cex = 2)
fit <- kmeans(orange_scaled, centers=3, nstart=10)
# Plot the result
plot(orange_scaled, col = fit$cluster, main = "K-means Clustering of Orange Data", xlab = "Age", ylab = "Circumference")
points(fit$centers, col = 1:3, pch = 8, cex = 2)
> orangekm <- kmeans(orange_scaled, centers=3, nstart=10)
orangekm <- kmeans(orange_scaled, centers=3, nstart=10)
plot(orange_scaled, col = orangekm$cluster, main = "K-means Clustering of Orange Data", xlab = "Age", ylab = "Circumference")
points(orangekm$centers, col = 1:3, pch = 8, cex = 2)
orangekm <- kmeans(orange_scaled, centers=3, nstart=10)
plot(orange_scaled, col = orangekm$cluster, main = "K-means Clustering of Orange Data", xlab = "Age", ylab = "Circumference")
points(orangekm$centers, col = 1:3, pch = 8, cex = 2)
orangekm <- kmeans(orange_scaled, centers=3, nstart=10)
plot(orange_scaled, col = orangekm$cluster, main = "K-means Clustering of Orange Data", xlab = "Age", ylab = "Circumference")
points(orangekm$centers, col = 1:3, pch = 8, cex = 3)
orangekm <- kmeans(orange_scaled, centers=3, nstart=10)
plot(orange_scaled, col = orangekm$cluster, main = "K-means Clustering of Orange Data", xlab = "Age", ylab = "Circumference")
points(orangekm$centers, col = 1:3, pch = 8, cex = 9)
orangekm <- kmeans(orange_scaled, centers=3, nstart=10)
plot(orange_scaled, col = orangekm$cluster, main = "K-means Clustering of Orange Data", xlab = "Age", ylab = "Circumference")
points(orangekm$centers, col = 1:3, pch = 8, cex = 1)
orangekm <- kmeans(orange_scaled, centers=3, nstart=10)
plot(orange_scaled, col = orangekm$cluster, main = "K-means Clustering of Orange Data", xlab = "Age", ylab = "Circumference")
points(orangekm$centers, col = 1:3, pch = 8, cex = 2)
orangekm <- kmeans(orange_scaled, centers=3, nstart=10)
plot(orange_scaled, col = orangekm$cluster, main = "K-means Clustering of Orange Data", xlab = "Age", ylab = "Circumference")
points(orangekm$centers, col = 1:3, pch = 8)
orangekm <- kmeans(orange_scaled, centers=3, nstart=10)
plot(orange_scaled, col = orangekm$cluster, main = "K-means Clustering of Orange Data", xlab = "Age", ylab = "Circumference")
points(orangekm$centers, col = 1:3, pch = 4)
orangekm <- kmeans(orange_scaled, centers=3, nstart=10)
plot(orange_scaled, col = orangekm$cluster, main = "K-means Clustering of Orange Data", xlab = "Age", ylab = "Circumference")
points(orangekm$centers, col = 1:3, pch = 1)
orangekm <- kmeans(orange_scaled, centers=3, nstart=10)
plot(orange_scaled, col = orangekm$cluster, main = "K-means Clustering of Orange Data", xlab = "Age", ylab = "Circumference")
points(orangekm$centers, col = 1:3)
orangekm <- kmeans(orange_scaled, centers=3, nstart=10)
plot(orange_scaled, col = orangekm$cluster, main = "K-means Clustering of Orange Data", xlab = "Age", ylab = "Circumference")
points(orangekm$centers, col = 1:3)
orangekm <- kmeans(orange_scaled, centers=3, nstart=10)
plot(orange_scaled, col = orangekm$cluster, main = "K-means Clustering of Orange Data", xlab = "Age", ylab = "Circumference")
points(orangekm$centers, col = 1:3)
orangekm <- kmeans(orange_scaled, centers=3, nstart=10)
plot(orange_scaled, col = orangekm$cluster, main = "K-means Clustering of Orange Data", xlab = "Age", ylab = "Circumference")
orangekm <- kmeans(orange_scaled, centers=3, nstart=10)
plot(orange_scaled, col = orangekm$cluster, main = "K-means Clustering of Orange Data", xlab = "Age", ylab = "Circumference")
orangekm <- kmeans(orange_scaled, centers=3, nstart=10)
plot(orange_scaled, col = orangekm$cluster, main = "K-means Clustering of Orange Data", xlab = "Age", ylab = "Circumference")
> plot(orange_scaled, col = orangekm$cluster)
plot(orange_scaled, col = orangekm$cluster)
